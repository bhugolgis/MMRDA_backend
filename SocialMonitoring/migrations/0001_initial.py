# Generated by Django 4.1.5 on 2023-01-27 06:08

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='labourcampDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LabourCampName', models.CharField(blank=True, max_length=255, null=True)),
                ('LabourCampID', models.CharField(blank=True, max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='PAP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, max_length=255, null=True)),
                ('packages', models.CharField(blank=True, max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfMonitoring', models.DateField(blank=True, null=True)),
                ('PAPID', models.CharField(max_length=255, unique=True)),
                ('nameOfPAP', models.CharField(blank=True, max_length=255, null=True)),
                ('addressLine1', models.TextField(blank=True, max_length=255, null=True)),
                ('streetName', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.PositiveIntegerField(blank=True, null=True)),
                ('dateOfIdentification', models.DateField(blank=True, null=True)),
                ('eligibility', models.CharField(blank=True, max_length=255, null=True)),
                ('categoryOfPap', models.CharField(blank=True, max_length=255, null=True)),
                ('typeOfAsset', models.CharField(blank=True, max_length=255, null=True)),
                ('areaOfAsset', models.BigIntegerField(blank=True, null=True)),
                ('legalStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('legalDocuments', models.FileField(blank=True, null=True, upload_to='PAP/PAP_legalDocuments/')),
                ('actionTaken', models.CharField(blank=True, max_length=100, null=True)),
                ('notAgreedReason', models.TextField(blank=True, max_length=255, null=True)),
                ('presentPhotograp', models.ImageField(blank=True, null=True, upload_to='PAP/presentphotograph')),
                ('remarks', models.TextField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='papUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rehabilitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, max_length=255, null=True)),
                ('packages', models.CharField(blank=True, max_length=255, null=True)),
                ('dateOfMonitoring', models.DateField(blank=True, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfRehabilitation', models.DateField(blank=True, null=True)),
                ('PAPID', models.CharField(blank=True, max_length=255, null=True)),
                ('PAPName', models.CharField(blank=True, max_length=255, null=True)),
                ('cashCompensation', models.PositiveIntegerField(blank=True, null=True)),
                ('compensationStatus', models.CharField(blank=True, max_length=255, null=True)),
                ('typeOfCompensation', models.CharField(blank=True, max_length=255, null=True)),
                ('otherCompensationType', models.CharField(blank=True, max_length=255, null=True)),
                ('addressLine1', models.TextField(blank=True, max_length=255, null=True)),
                ('streetName', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.BigIntegerField(blank=True, null=True)),
                ('isShiftingAllowance', models.BooleanField(blank=True)),
                ('shiftingAllowanceAmount', models.PositiveIntegerField(blank=True, null=True)),
                ('isLivelihoodSupport', models.BooleanField(blank=True)),
                ('livelihoodSupportAmount', models.BigIntegerField(blank=True, null=True)),
                ('livelihoodSupportCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('livelihoodSupportPhotograph', models.ImageField(blank=True, null=True, upload_to='rehabitation/livelihoodSupportPhotograph/')),
                ('livelihoodSupportRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isTraining', models.BooleanField(blank=True)),
                ('trainingCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('trainingPhotograph', models.ImageField(blank=True, null=True, upload_to='rehabitation/trainingPhotograph/')),
                ('trainingRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('typeOfTenaments', models.CharField(blank=True, max_length=255)),
                ('areaOfTenament', models.BigIntegerField(blank=True, null=True)),
                ('tenamentsPhotograph', models.ImageField(blank=True, null=True, upload_to='rehabitation/tenamentsPhotograph/')),
                ('isRelocationAllowance', models.CharField(blank=True, max_length=255, null=True)),
                ('RelocationAllowanceAmount', models.PositiveIntegerField(blank=True, null=True)),
                ('isfinancialSupport', models.BooleanField(blank=True, null=True)),
                ('financialSupportAmount', models.PositiveIntegerField(blank=True, null=True)),
                ('isCommunityEngagement', models.BooleanField(blank=True, null=True)),
                ('isEngagementType', models.CharField(blank=True, max_length=255, null=True)),
                ('photographs', models.ImageField(blank=True, null=True, upload_to='rehabitation/Rehabitationphotographs/')),
                ('documents', models.FileField(blank=True, null=True, upload_to='rehabitation/documents')),
                ('remarks', models.TextField(blank=True, max_length=255, null=True)),
                ('ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rehabilitation', to='SocialMonitoring.pap')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='rehabilitationUser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LabourCamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, max_length=255, null=True)),
                ('packages', models.CharField(blank=True, max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfMonitoring', models.DateField(blank=True, null=True)),
                ('labourCampId', models.CharField(blank=True, max_length=255, null=True)),
                ('labourCampName', models.CharField(blank=True, max_length=255, null=True)),
                ('isToilet', models.BooleanField(blank=True, max_length=255)),
                ('toiletCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('toiletPhotograph', models.ImageField(blank=True, null=True, upload_to='Labour Camp/toilet_photographs/')),
                ('toiletRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isDrinkingWater', models.BooleanField(blank=True)),
                ('drinkingWaterCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('drinkingWaterPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/drinkingWater_photographs/')),
                ('drinkingWaterRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isDemarkationOfPathways', models.BooleanField(blank=True)),
                ('demarkationOfPathwaysCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('demarkationOfPathwaysPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/demarkingPathways_photographs/')),
                ('demarkationOfPathwaysRemark', models.TextField(blank=True, max_length=255, null=True)),
                ('isSignagesLabeling', models.BooleanField(blank=True)),
                ('signagesLabelingCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('signagesLabelingPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/signagesLabeling_Photographs/')),
                ('signagesLabelingRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isKitchenArea', models.BooleanField(blank=True, null=True)),
                ('kitchenAreaCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('kitchenAreaPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/KitchenArea _photographs/')),
                ('kitchenAreaRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isFireExtinguish', models.BooleanField(blank=True, null=True)),
                ('fireExtinguishCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('fireExtinguishPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/fireExtinguish_photographs/')),
                ('fireExtinguishRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isRoomsOrDoms', models.BooleanField(blank=True, null=True)),
                ('roomsOrDomsCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('roomsOrDomsPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/rooms_photographs/')),
                ('roomsOrDomsRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isSegregationOfWaste', models.BooleanField(blank=True)),
                ('segregationOfWasteCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('segregationOfWastePhotographs', models.ImageField(blank=True, null=True, upload_to='labour Camp/segrigationOfWaste_Photographs/')),
                ('segregationOfWasteRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isRegularHealthCheckup', models.BooleanField(blank=True)),
                ('regularHealthCheckupCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('regularHealthCheckupPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/RegularHealthCheckup_Photographs/')),
                ('regularHealthCheckupRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isAvailabilityOfDoctor', models.BooleanField(blank=True)),
                ('availabilityOfDoctorCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('availabilityOfDoctorPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/AvailabilityOfDoctor_photographs/')),
                ('availabilityOfDoctorRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isFirstAidKit', models.BooleanField(blank=True)),
                ('firstAidKitCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('firstAidKitPhotographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/FirstAidKit_photographs/')),
                ('firstAidKitRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('transportationFacility', models.BooleanField(blank=True, null=True)),
                ('transportationFacilityCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('modeOfTransportation', models.CharField(blank=True, max_length=255, null=True)),
                ('distanceFromSite', models.PositiveIntegerField(blank=True, null=True)),
                ('photographs', models.ImageField(blank=True, null=True, upload_to='Labour Camp/GenralPhotographs/')),
                ('documents', models.FileField(blank=True, null=True, upload_to='labourcamp_documents/')),
                ('remarks', models.TextField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='LaboursCamp_User', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstructionSiteDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(blank=True, max_length=255, null=True)),
                ('packages', models.CharField(blank=True, max_length=255, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('dateOfMonitoring', models.DateField(blank=True, null=True)),
                ('constructionSiteName', models.CharField(blank=True, max_length=255, null=True)),
                ('constructionSiteID', models.CharField(blank=True, max_length=255, null=True)),
                ('isDemarkationOfPathways', models.BooleanField(blank=True)),
                ('demarkationOfPathwaysCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('demarkationOfPathwaysPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/demarkingPathways_photographs/')),
                ('demarkationOfPathwaysRemark', models.TextField(blank=True, max_length=255, null=True)),
                ('isSignagesLabeling', models.BooleanField(blank=True)),
                ('signagesLabelingCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('signagesLabelingPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/signagesLabeling_Photographs/')),
                ('signagesLabelingRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isRegularHealthCheckup', models.BooleanField(blank=True)),
                ('regularHealthCheckupCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('regularHealthCheckupPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/RegularHealthCheckup_Photographs/')),
                ('regularHealthCheckupRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isAvailabilityOfDoctor', models.BooleanField(blank=True)),
                ('availabilityOfDoctorCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('availabilityOfDoctorPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/AvailabilityOfDoctor_photographs/')),
                ('availabilityOfDoctorRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isFirstAidKit', models.BooleanField(blank=True)),
                ('firstAidKitCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('firstAidKitPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/FirstAidKit_photographs/')),
                ('firstAidKitRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isDrinkingWater', models.BooleanField(blank=True)),
                ('drinkingWaterCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('drinkingWaterPhotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/drinkingWater_photographs/')),
                ('drinkingWaterRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isToilet', models.BooleanField(blank=True, max_length=255, null=True)),
                ('toiletCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('toiletPhotograph', models.ImageField(blank=True, null=True, upload_to='constructionSite/toilet_photographs/')),
                ('toiletRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('isbarricading', models.BooleanField(blank=True, null=True)),
                ('barricadingCondition', models.CharField(blank=True, max_length=255, null=True)),
                ('barricadingPhotograph', models.ImageField(blank=True, null=True, upload_to='constructionSite/barricading_photograph/')),
                ('barricadingRemarks', models.TextField(blank=True, max_length=255, null=True)),
                ('genralphotographs', models.ImageField(blank=True, null=True, upload_to='constructionSite/genral_photograph/')),
                ('documents', models.FileField(blank=True, null=True, upload_to='constructionSite/documents/')),
                ('remarks', models.TextField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='constructionsite_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
